#include <iostream>

struct derewo
{
	int data;
	derewo* left;
	derewo* right;
};

derewo* head;

void AddList(int value, int position)
{
	derewo* node = new derewo;
	node->data = value;
	if (head == NULL)
	{
		node->left = node;
		node->right = node;
		head = node;
	}
	else
	{
		derewo* p = head;
		for (int i = position; i > 1; i--) p = p->left;
		p->right->left = node;
		node->right = p->right;
		node->left = p;
		p->right = node;
	}
	std::cout << "\nЭлемент добавлен...\n\n";
}

void PrintTree()
{
	if (head == NULL) std::cout << "\nСписок пуст\n\n";
	else
	{
		derewo* a = head;
		std::cout << "\nЭлементы списка: ";
		do
		{
			std::cout << a->data << " ";
			a = a->left;
		} while (a != head); std::cout << "\n ";
	}
}

int DeleteTree(int position)
{
	if (head == NULL)
	{
		std::cout << "\nСписок пуст\n\n"; return 0;
	}
	if (head == head->left)
	{
		delete head;
		head = NULL;
	}
	else
	{
		derewo* a = head;
		for (int i = position; i > 1; i--) a = a->left;
		if (a == head) head = a->left;
		a->right->left = a->left;
		a->left->right = a->right;
		delete a;
	}
	std::cout << "\n Элемент удален...\n\n";
}

void main()
{
	setlocale(LC_ALL, "Rus");
	int value, position, x;
	do
	{
		std::cout << "Для вывода дерева нажмите 1" << std::endl;
		std::cout << "Для добавить элемента в дерево нажмите 2" << std::endl;
		std::cout << "Для удаления элемента нажмите 3" << std::endl;
		std::cout << "Для выхода из программы нажмите 0 " << std::endl;
		std::cout << "\n Введине номер операции > "; std::cin >> x;
		switch (x)
		{
		case 1: 
			PrintTree(); break;
		case 2:
			std::cout << "Текущее значение > "; std::cin >> value;
			std::cout << "Текущая позиция > "; std::cin >> position;
			AddList(value, position); break;
		case 3: 
			std::cout << "Текущая позиция > "; std::cin >> position;
			DeleteTree(position); break;
		}
	} 
	while (x != 0);
}
